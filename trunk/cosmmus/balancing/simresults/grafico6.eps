%!PS-Adobe-2.0 EPSF-2.0
%%Title: grafico6.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Thu Jan 15 18:27:42 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 10.000 def
/userlinewidth gnulinewidth def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (grafico6.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Carlos Eduardo Benevides Bezerra,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jan 15 18:27:42 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1242 1260 M
5652 0 V
stroke
LTb
1242 1260 M
63 0 V
5589 0 R
-63 0 V
stroke
1134 1260 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
1242 1854 M
5652 0 V
stroke
LTb
1242 1854 M
63 0 V
5589 0 R
-63 0 V
stroke
1134 1854 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 50000)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
1242 2448 M
5652 0 V
stroke
LTb
1242 2448 M
63 0 V
5589 0 R
-63 0 V
stroke
1134 2448 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 100000)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
1242 3042 M
5652 0 V
stroke
LTb
1242 3042 M
63 0 V
5589 0 R
-63 0 V
stroke
1134 3042 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 150000)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
1242 3636 M
5652 0 V
stroke
LTb
1242 3636 M
63 0 V
5589 0 R
-63 0 V
stroke
1134 3636 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 200000)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
1242 4230 M
5652 0 V
stroke
LTb
1242 4230 M
63 0 V
5589 0 R
-63 0 V
stroke
1134 4230 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 250000)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
1242 4824 M
5652 0 V
stroke
LTb
1242 4824 M
63 0 V
5589 0 R
-63 0 V
stroke
1134 4824 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 300000)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
1242 1260 M
0 3564 V
stroke
LTb
1242 1260 M
0 63 V
0 3501 R
0 -63 V
stroke
1242 1080 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
2146 1260 M
0 3564 V
stroke
LTb
2146 1260 M
0 63 V
0 3501 R
0 -63 V
stroke
2146 1080 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 20)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
3051 1260 M
0 3564 V
stroke
LTb
3051 1260 M
0 63 V
0 3501 R
0 -63 V
stroke
3051 1080 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 40)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
3955 1260 M
0 3564 V
stroke
LTb
3955 1260 M
0 63 V
0 3501 R
0 -63 V
stroke
3955 1080 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 60)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
4859 1260 M
0 3564 V
stroke
LTb
4859 1260 M
0 63 V
0 3501 R
0 -63 V
stroke
4859 1080 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 80)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
5764 1260 M
0 3564 V
stroke
LTb
5764 1260 M
0 63 V
0 3501 R
0 -63 V
stroke
5764 1080 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 100)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
6668 1260 M
0 3564 V
stroke
LTb
6668 1260 M
0 63 V
0 3501 R
0 -63 V
stroke
6668 1080 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 120)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
1242 4824 N
0 -3564 V
5652 0 V
0 3564 V
-5652 0 V
Z stroke
LCb setrgbcolor
180 3042 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 180.0 0.0 true true 0 (ProGReGA - weight distribution)]
] -60.0 MCshow
grestore
LTb
LCb setrgbcolor
4068 810 M
[ [(Helvetica) 180.0 0.0 true true 0 (Time \(s\))]
] -60.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT6
LTb
2354 513 M
[ [(Helvetica) 180.0 0.0 true true 0 (Total weight)]
] -60.0 MRshow
LT6
2462 513 M
495 0 V
2709 513 Pls
1.000 UP
1.000 UL
LT6
LTb
2354 333 M
[ [(Helvetica) 180.0 0.0 true true 0 (Server 1)]
] -60.0 MRshow
LT6
2462 333 M
495 0 V
1690 1260 M
447 0 V
448 0 V
448 0 V
447 0 V
448 0 V
447 0 V
448 0 V
448 0 V
447 0 V
448 0 V
448 0 V
280 0 V
1690 1260 Crs
2137 1260 Crs
2585 1260 Crs
3033 1260 Crs
3480 1260 Crs
3928 1260 Crs
4375 1260 Crs
4823 1260 Crs
5271 1260 Crs
5718 1260 Crs
6166 1260 Crs
6614 1260 Crs
2709 333 Crs
1.000 UP
1.000 UL
LT6
LTb
2354 153 M
[ [(Helvetica) 180.0 0.0 true true 0 (Server 2)]
] -60.0 MRshow
LT6
2462 153 M
495 0 V
1690 1598 M
447 -37 V
448 57 V
448 36 V
447 56 V
448 -226 V
447 68 V
448 175 V
448 21 V
447 59 V
448 94 V
448 -144 V
280 48 V
1690 1598 Star
2137 1561 Star
2585 1618 Star
3033 1654 Star
3480 1710 Star
3928 1484 Star
4375 1552 Star
4823 1727 Star
5271 1748 Star
5718 1807 Star
6166 1901 Star
6614 1757 Star
2709 153 Star
1.000 UP
1.000 UL
LT6
LTb
4361 513 M
[ [(Helvetica) 180.0 0.0 true true 0 (Server 3)]
] -60.0 MRshow
LT6
4469 513 M
495 0 V
1690 1525 M
447 -106 V
448 349 V
448 -63 V
447 -111 V
448 425 V
447 -110 V
448 128 V
448 21 V
447 43 V
448 84 V
448 43 V
280 -42 V
1690 1525 Box
2137 1419 Box
2585 1768 Box
3033 1705 Box
3480 1594 Box
3928 2019 Box
4375 1909 Box
4823 2037 Box
5271 2058 Box
5718 2101 Box
6166 2185 Box
6614 2228 Box
4716 513 Box
1.000 UP
1.000 UL
LT6
LTb
4361 333 M
[ [(Helvetica) 180.0 0.0 true true 0 (Server 4)]
] -60.0 MRshow
LT6
4469 333 M
495 0 V
1690 1804 M
447 366 V
448 -51 V
448 -290 V
447 -125 V
448 244 V
447 192 V
448 70 V
448 252 V
447 -26 V
448 -137 V
448 235 V
280 -97 V
1690 1804 BoxF
2137 2170 BoxF
2585 2119 BoxF
3033 1829 BoxF
3480 1704 BoxF
3928 1948 BoxF
4375 2140 BoxF
4823 2210 BoxF
5271 2462 BoxF
5718 2436 BoxF
6166 2299 BoxF
6614 2534 BoxF
4716 333 BoxF
1.000 UP
1.000 UL
LT6
LTb
4361 153 M
[ [(Helvetica) 180.0 0.0 true true 0 (Server 5)]
] -60.0 MRshow
LT6
4469 153 M
495 0 V
1690 1709 M
447 -38 V
448 222 V
448 149 V
447 7 V
448 -158 V
447 327 V
448 383 V
448 224 V
447 -190 V
448 -8 V
448 140 V
280 44 V
1690 1709 Circle
2137 1671 Circle
2585 1893 Circle
3033 2042 Circle
3480 2049 Circle
3928 1891 Circle
4375 2218 Circle
4823 2601 Circle
5271 2825 Circle
5718 2635 Circle
6166 2627 Circle
6614 2767 Circle
4716 153 Circle
1.000 UP
1.000 UL
LT6
LTb
6368 513 M
[ [(Helvetica) 180.0 0.0 true true 0 (Server 6)]
] -60.0 MRshow
LT6
6476 513 M
495 0 V
1690 1675 M
447 106 V
448 -42 V
448 173 V
447 -113 V
448 233 V
447 812 V
448 154 V
448 169 V
447 -197 V
448 80 V
448 84 V
280 39 V
1690 1675 CircleF
2137 1781 CircleF
2585 1739 CircleF
3033 1912 CircleF
3480 1799 CircleF
3928 2032 CircleF
4375 2844 CircleF
4823 2998 CircleF
5271 3167 CircleF
5718 2970 CircleF
6166 3050 CircleF
6614 3134 CircleF
6723 513 CircleF
1.000 UP
1.000 UL
LT6
LTb
6368 333 M
[ [(Helvetica) 180.0 0.0 true true 0 (Server 7)]
] -60.0 MRshow
LT6
6476 333 M
495 0 V
1690 2442 M
447 179 V
448 -419 V
448 9 V
447 311 V
448 389 V
447 -4 V
448 236 V
448 64 V
447 112 V
448 629 V
448 -621 V
280 -22 V
1690 2442 TriU
2137 2621 TriU
2585 2202 TriU
3033 2211 TriU
3480 2522 TriU
3928 2911 TriU
4375 2907 TriU
4823 3143 TriU
5271 3207 TriU
5718 3319 TriU
6166 3948 TriU
6614 3327 TriU
6723 333 TriU
1.000 UP
1.000 UL
LT6
LTb
6368 153 M
[ [(Helvetica) 180.0 0.0 true true 0 (Server 8)]
] -60.0 MRshow
LT6
6476 153 M
495 0 V
1690 1917 M
447 625 V
448 288 V
448 -480 V
447 -220 V
448 120 V
447 774 V
448 229 V
448 253 V
447 251 V
448 272 V
448 -152 V
280 -276 V
1690 1917 TriUF
2137 2542 TriUF
2585 2830 TriUF
3033 2350 TriUF
3480 2130 TriUF
3928 2250 TriUF
4375 3024 TriUF
4823 3253 TriUF
5271 3506 TriUF
5718 3757 TriUF
6166 4029 TriUF
6614 3877 TriUF
6723 153 TriUF
1.000 UL
LTb
1242 4824 N
0 -3564 V
5652 0 V
0 3564 V
-5652 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
