CITAR O Karypis!

contribution/novelty: *considera a carga como sendo o uso de largura de banda* (interações entre avatares/jogadores), e considera um *sistema heterogêneo* (colocar essas duas coisas de forma que não pareça simples/antigo. destacar a relevância de considerar esses dois aspectos.) uso de um algoritmo de geração de partição que busca criar um baixo edge-cut já de início, em tempo v*n, onde v é o número de vizinhos de cada vértice. como o número de vizinhos é constante, tem-se complexidade O(n). ALSO we try to handle widespread overload, and adapting the game quality to the number of players and to the overload of the system as a whole.

verificar se todos os trabalhos anteriores ÑÃÕ consideram que o sistema deve estar uniformemente sobrecarregado. óbvio que isso vai depender do que se quer da aplicação (jogo específico)

usually it does not handle widespread overload, for all of them require the whole system to be not overloaded for their algorithms to work

De Vleeschauwer:

	considera load como número de usuários
	não usa particionamento de grafo para fazer a divisão
	*propõe um "greedy", que só pega as células mais pesadas e as aloca em um servidor tal que a sobrecarga maxima (a carga do servidor mais sobrecarregado) seja a menor 		possível
		- não considera interações
		- considera que o tráfego é linear
	*clustering, para lidar com interações entre células
		- não considera que um hotspot pode ser grande e acabar "merging clusters" que resultam em um cluster de microcells com carga excessivamente alta
		- não considera heterogeneidade
		- extremamente pobre, a abordagem
		- não busca combinar a idéia de clusters de células altamente interdependentes com a restrição de ter uma carga máxima para cada servidor (clusters sem limite de 			peso pré-definido)
	*simulated annealing:
		- boa idéia, que poderia ser feita de maneira melhor se fosse usado um algoritmo mais específico (como o k-l para otimização de partições em um grafo com redução 			de edge-cut)
	

Fengyun Lu:

	considera um cluster.
	each players is always connected to the same server, and this one will process its inputs, though it can forward the player's state to other cluster nodes.
	the load balancing considers the load as the number of players in each cluster node.
	the load balancing (NAT) simply distribute the players among cluster nodes in a round-robin manner.


Jin Chen: (? simular com seu algoritmo original, e com o ajuste de considerar os thresholds dinamicamente [i.e. apenas modificar o algoritmo de fase 2 para ser o do chen?])
*semelhante!*
	é preciso chegar a um meio-termo entre "partition aggregation" e "load shedding"
	usa a mesma abstração de grafos usadas pelo progrega
	muito bom! porém considera que o SLA depende de um overload_threshold (e de um safe_threshold), which, in turn, depends solely on the number of players, not considering the different levels of interactions of players in different types of players distributions (i.e. whether they close to one another or distant from one another). the automatic definition of this threshold might be inadequate, considering that the same number of players may cause or not SLA violations in a server.
	se um servidor está sobrecarregado, e os outros também, ele não distribui sua carga, mesmo que os outros estejam menos sobrecarregados que ele.
	BFS para formar a partição do grafo
	para fundir partições, a idéia também é boa, mas o algoritmo utilizado é o BFS, e não um algoritmo mais direcionado ao objetivo, como o GGP (karypis)



Ta Nguyen Binh Duong e Suiping Zhou:

	again the number of clients define the fucking load!
	evaluation is simplified to homogeneous systems
	the way they form a local group of server to share the load is a simples breadth-first lookup initiating at the OL'ed server. the lee (and ours) approach is much better, for it tries to find a "coldspot" in the virtual environment, prefferring servers with lower loads and its neighbors.
	does not handle widespread overload
	it is good in the sense that it tries to suppress the migration overhead[, which is not treated in our work]



Ihab Kazem, Dewan Tanvir Ahmed, Shervin Shirmohammadi:

	


FUTURE WORK:

our work did not go as deep in the programming level as others works did. in future works, we will try to make more detailed simulations, instead of analytical simulations based on our mathematical overload and overhead model.
