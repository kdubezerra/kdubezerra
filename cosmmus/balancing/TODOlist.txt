
==============   CORRECTION LIST   ==============

*** ver onde tem powerfraction, worldweight, etc., pois isso não é a medida da carga ideal de cada servidor!

*** ver onde tem sort(), porque não tá funcionando, pelo menos, pra all_neighbors no findLightestNeighbor(list_of_regions);

*** ver por que diabos que estão surgindo células órfãs no balanceamento dinâmico (region->checkBalacing())





==============   TESTS LIST   ==============

retorno: load e migration

idéia de gráficos de barras: cada barra = weight + load de cada região em cada esquema de balanceamento
idéias de comparações:
  com e sem a3
  global e local (load e migration)
  com e sem K-L









============================== old to-do list ==============================








- fazer o kl, quando remove o par de celulas trocadas da lista de celulas a comparar, recalcular o D de cada célula extraindo as antigas dos grafos do proximo pass, ao invés de fazer como está sendo feito em refinekl_pairwise, onde a celula, mesmo apos ser removida, é comparada com as proximas celulas analisadas

- calcular o k que maximize o gain, pra escabar de mínimos locais (ver paper do k-l)

OK - calcular o peso de uma região como sendo a interação de players dentro da região com os outros players dentro da região, mais a soma da arestas ligadas a outras regiões.

- implementar um algoritmo de particionamento usando spectral bissection.

OK - fazer com que os neighbors da região funcionem

- quando duas células são trocadas entre regiões, pensar no que fazer, em relação aos edge weights assimétricos: simplesmente pegar o máximo, ou levar em consideração que "está OK" se o servidor que ficar com maior edge cut for mais poderoso?

- usar apenas células da fronteira

- verificar se, quando células são trocadas, é mantido o balanceamento.

+ isso deverá ser chamado de... demand? : quando for verificado o "peso" de uma região, ou seja, do quanto de capacidade do servidor aquela região precisará, considerar as mensagens vindas de jogadores em regiões vizinhas, ou seja, a soma de suas arestas ligadas a outras regiões

+ o mundo pode ter espaços não regionados? a soma de todas as regiões pode ser menor que o mundo inteiro? inicialmente deixar assim, pra facilitar possíveis otimizações no futuro.

+ poder remover servidores/regiões, assim como adicionar novos.

==================================== CRASH PROGRAMMING!!! ====================================

ARRUMAR O CÁLCULO DO PESO DA REGIÃO PRA INCLUIR TRÁFEGO COM OUTRAS REGIÕES (de server pra server)

DISTRIBUIR AS CÉLULAS ÓRFÃS DE MANEIRA MAIS "JUSTA" (não por tudo pro server com  poucos recursos)
  (isso pode ser abstraído se se considerar o algorito K-L/F-M, pois este já disporá de informação do peso de verdade da região [WEIGHT + EDGES])
  
TALVEZ FOSSE BOM POR MENOS REGIÕES, SE O PESO TOTAL FOSSE MENOR, CONTANTO QUE OS SERVIDORES NÃO FICASSEM SOBRECARREGADOS.

POR NA CONTA QUE ÀS VEZES PODE SER DESNECESSÁRIO O CUSTO DE BALANCEAR UMA REDE ONDE OS NODOS ESTÃO DESBALANCEADOS, PORÉM SEM USAR 100% DOS SEUS RECURSOS
  -> usar o trigger de um dos servidores quando está sobrecarregado: comparar global e local .
  
  K-L. pairwise.
  
  divide e rebalance
  
  
É DINÂMICO!!! OU SEJA, FAZ O TEMPO TODO!!!

TEM QUE SELECIONAR O K QUE MAXIMIZE O GANHO COM O K-L
TEM QUE FAZER AS CÉLULAS REMOVIDAS SEREM DESCONSIDERAS NO CÁLCULO DO NOVO DESIRE